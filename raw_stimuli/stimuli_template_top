var shuffleSequence = seq("intro", 
                          "intro_sep", 
                          //sepWith("within_intro_sep", 
                                  "practice"
                          //       )
                          , 
                          "practice_sep", 
                          //sepWith("sep", 
                                  rshuffle(startsWith("condition_"), startsWith("filler"))
                          //       )
                          ,
                          "send_results",
                         "debrief"); 
var practiceItemTypes = ["practice"];


// default settings
var manualSendResults = true;

var defaults = [
    "Separator", {
        normalMessage: "Lütfen bekleyiniz."
    },
    "DashedSentence", {
        mode: "speeded acceptability", display: "in place",
        wordTime:350,
        wordPauseTime:150,
    },
    "DashedAcceptabilityJudgment", {
        hasCorrect: false
    },
    "Question", {
        as: [["q","KÖTÜ (Q'ya basın)"],["p","İYİ (P'ye basın)"]],
        q: "Bu cümle nasıl bir cümleydi?",
        hasCorrect: false,
        presentAsScale: true,
        randomOrder: false,
        showNumbers: true,
        autoFirstChar: false, 
        wordTime:300,
        wordPauseTime:200,
        instructions: " "
    },
    "Message", {
        hideProgressBar: false
    },
    "Form", {
        hideProgressBar: false,
        continueOnReturn: true,
        saveReactionTime: true,
        continueMessage: "Devam etmek için buraya tıklayınız.",
        obligatoryCheckboxErrorGenerator: function (field) { return "Bu alanı doldurmanız gerekmektedir." },
        obligatoryErrorGenerator: function (field) { return "Bu alanı doldurmanız gerekmektedir."; },
        obligatoryRadioErrorGenerator: function (field) { return "Seçeneklerden birini seçiniz."; }
        
    }
];

 // insert breaks
function modifyRunningOrder(ro) {

 for (var i = 0; i < ro.length; ++i) {
 if (i % 20 == 25 && i > 20 && i < 200) {
 ro[i].push(new DynamicElement(
 "Message",
 { html: "<p>Kısa bir ara verelim. Deney 10 saniye içerisinde devam edecektir.</p>", transfer: 10000 },
 true
 ));
 }
 }
 return ro;
 }



var items = [
    ["send_results", "__SendResults__", { }],

    ["sep", "Separator", {
        normalMessage: "",
        errorMessage: "",
        ignoreFailure: false}],
    
    ["intro_sep", "Separator", {
        transfer: "keypress",
        normalMessage: "Alıstırma kısmına başlamak için boşluk tuşuna basınız.",
        errorMessage: "Alıstırma kısmına başlamak için boşluk tuşuna basınız." }],


    ["within_intro_sep", "Separator", {
        transfer: "keypress",
        normalMessage: "Harika. İyi gidiyorsunuz. Bir sonraki cümleye geçmek için boşluk tuşuna basınız.",
        errorMessage: "Odaklanınız. Bir sonraki soruya geçmek için boşluk tuşuna basınız."}],
    
    ["practice_sep", "Separator", {
        transfer: "keypress",
        normalMessage: "Deneye başlamak için boşluk tuşuna basınız.",
        errorMessage: "Odaklanınız. Bir sonraki soruya geçmek için boşluk tuşuna basınız." }],


    ["intro", "Form", {
        html: { include: "intro1.html" },
        obligatoryCheckboxErrorGenerator: function (field) { return "Devam etmeden önce çalismaya katılmayı kabul etmelisiniz."; }
    } ],
    
    ["intro", "Form", {
        html: { include: "intro2.html" },
        validators: {
            age: function (s) { if (s.match(/^\d+$/)) return true; else return "Yaşınızı sayı olarak giriniz."; },
        }
    } ],

    ["intro", "Form", {
        html: { include: "intro3.html" } } ],

    ["intro", "Form", {
        html: { include: "intro4.html" },
        transfer: "keypress"
        //continueMessage: "Alıştırma kısmına başlamak için boşluk tuşuna basınız." 
    } ],

    ["debrief", "Message", {
        html: { include: "debrief.html" },
                transfer: 3000  }]

// Practice


["practice", "DashedSentence", {s: "Ev arkadaşının bütün ısrarlarına rağmen hiç ders çalışmadı."},
"Question",       {q: "Cümleyi anladınız mı?", hasCorrect: 0}], // Y
["practice", "DashedSentence", {s: "Kız elindeki fincanı tabağına dikkatle yerleştirdi."},
"Question",       {q: "Kız elindeki çatalı mı tabağa yerleştirmiştir?", hasCorrect: 1}], // N
["practice", "DashedSentence", {s: "Heykelleri büyük bir dikkatle incelediler ama aralarında bir fark göremediler."},
"Question",       {q: "Aralarında bir fark bulundu mu?", hasCorrect: 1}], // N 
["practice", "DashedSentence", {s: "O adam tekrar karşılarına çıkınca yine iş istediğini anladılar."},
"Question",       {q: "Bir adamdan bahsedildi mi?", hasCorrect: 0}], // Y
["practice", "DashedSentence", {s: "İçi rahatlayan bahçıvan huzurla sarayı gezmeye çıkmış."},
"Question",       {q: "İçi rahatlayan bahçıvan çalışmak için mi saraya gitmiştir?", hasCorrect: 1}], // N
